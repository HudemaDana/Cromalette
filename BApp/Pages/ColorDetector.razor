@page "/weather"

@using BApp.Components
@using BApp.Components.PaletteExtractor
@using BApp.Services.Interfaces
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using SixLabors.ImageSharp;
@using SixLabors.ImageSharp.Processing;

@inject IImageService ImageService
@inject IUserColorService UserColorService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject AuthenticationStateProvider authStateProvider
@inject ILocalStorageService LocalStorage
@inject IUserLevelService UserLevelService
@inject UserLevelState UserLevelState

<div class="scan-container">
    <div class="card">
        <div class="upload-image-grid-section">
            @if (!string.IsNullOrEmpty(_imageDataUrl))
            {
                <div class="image-container">
                    <img src="@_imageDataUrl" alt="Image Preview" id="preview" />
                </div>
            }
            else
            {
                <div class="image-container no-image">
                    <div>No Image Selected</div>
                </div>
            }

            <div class="custom-input-file">
                <InputFile OnChange="PreviewImage" accept=".png, .jpg, .jpeg" />
            </div>
        </div>

        <div class="toggle-grid-section">
            <div class="palette-container">
                @if (colors.Any())
                {
                    <div class="palette-color-selector">
                        <div class="row">
                            @foreach (var extractedColor in colors)
                            {
                                <div class="col-md-4 mb-2">
                                    <div class="extracted-color-container" style="background: @extractedColor" @onclick="() => ShowColorExtension(extractedColor)">
                                        <div class="color-overlay">@extractedColor</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    @if (colors.Any() && !string.IsNullOrEmpty(selectedColor))
                    {
                        <div class="action-button-section">
                            <ButtonComponent CssClass="save-color-button" Label="Save" OnClick="SaveColorAsync" />
                        </div>
                    }
                }
            </div>
        </div>

        @if (!string.IsNullOrEmpty(selectedColor))
        {
            <ColorExtension ColorHex="@selectedColor" />

        }
        @if (!string.IsNullOrEmpty(plotUrl))
        {
            <div class="color-plot">
                <h3>Color Plot</h3>
                <img src="@plotUrl" alt="Color Plot" />
            </div>
        }
    </div>
</div>
