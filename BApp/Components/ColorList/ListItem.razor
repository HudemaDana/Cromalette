@using BApp.Domain.Models
@using ColorName
@using Microsoft.AspNetCore.Components.Web

@inject IJSRuntime JSRuntime

<div class="list-item-container"
     style="box-shadow: 24px 24px 0 0 rgba(@RGBColor.R, @RGBColor.G, @RGBColor.B, 0.4);"
     @onclick="HandleClick">

    <div class="upper-section">
        <div class="color" style="background-color: @Color.ColorHexValue" />
    </div>

    <div class="lower-section">
        <div class="color-info">
            <div class="title">@ColorNameProvider.GetColorNameFromHex(Color.ColorHexValue).colorName</div>
            <div class="date">@Color.SavingDate.ToString("dd/MM/yyyy")</div>
        </div>
        <div class="xp">@_colorXp.ToString() XP</div>
    </div>

</div>

@code {
    [Parameter]
    public UserColor Color { get; set; }

    [Parameter]
    public EventCallback<UserColor> OnClick { get; set; }

    private (int R, int G, int B) RGBColor { get; set; }
    private int _colorXp { get; set; }

    protected override void OnInitialized()
    {
        RGBColor = HexToRgb(Color.ColorHexValue);
        _colorXp = (int)Color.ColorDifficulty.Status;
    }

    private (int, int, int) HexToRgb(string hex)
    {
        hex = hex.TrimStart('#');
        int r = Convert.ToInt32(hex.Substring(0, 2), 16);
        int g = Convert.ToInt32(hex.Substring(2, 2), 16);
        int b = Convert.ToInt32(hex.Substring(4, 2), 16);
        return (r, g, b);
    }

    private async Task HandleClick()
    {
        if (OnClick.HasDelegate)
        {
            await OnClick.InvokeAsync(Color);
        }
    }
}
