// <auto-generated />
using System;
using BApp.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BApp.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240519104409_UpdateData")]
    partial class UpdateData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BApp.Domain.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LevelName")
                        .HasColumnType("integer");

                    b.Property<int>("LevelTotalXP")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LevelName = 1,
                            LevelTotalXP = 100
                        },
                        new
                        {
                            Id = 2,
                            LevelName = 2,
                            LevelTotalXP = 200
                        },
                        new
                        {
                            Id = 3,
                            LevelName = 3,
                            LevelTotalXP = 400
                        },
                        new
                        {
                            Id = 4,
                            LevelName = 4,
                            LevelTotalXP = 800
                        },
                        new
                        {
                            Id = 5,
                            LevelName = 5,
                            LevelTotalXP = 1600
                        },
                        new
                        {
                            Id = 6,
                            LevelName = 6,
                            LevelTotalXP = 3200
                        },
                        new
                        {
                            Id = 7,
                            LevelName = 7,
                            LevelTotalXP = 6400
                        },
                        new
                        {
                            Id = 8,
                            LevelName = 8,
                            LevelTotalXP = 12800
                        },
                        new
                        {
                            Id = 9,
                            LevelName = 9,
                            LevelTotalXP = 25600
                        },
                        new
                        {
                            Id = 10,
                            LevelName = 10,
                            LevelTotalXP = 51200
                        },
                        new
                        {
                            Id = 11,
                            LevelName = 11,
                            LevelTotalXP = 102400
                        },
                        new
                        {
                            Id = 12,
                            LevelName = 12,
                            LevelTotalXP = 204800
                        },
                        new
                        {
                            Id = 13,
                            LevelName = 13,
                            LevelTotalXP = 409600
                        },
                        new
                        {
                            Id = 14,
                            LevelName = 14,
                            LevelTotalXP = 819200
                        },
                        new
                        {
                            Id = 15,
                            LevelName = 15,
                            LevelTotalXP = 1638400
                        },
                        new
                        {
                            Id = 16,
                            LevelName = 16,
                            LevelTotalXP = 3276800
                        },
                        new
                        {
                            Id = 17,
                            LevelName = 17,
                            LevelTotalXP = 6553600
                        },
                        new
                        {
                            Id = 18,
                            LevelName = 18,
                            LevelTotalXP = 13107200
                        },
                        new
                        {
                            Id = 19,
                            LevelName = 19,
                            LevelTotalXP = 26214400
                        },
                        new
                        {
                            Id = 20,
                            LevelName = 20,
                            LevelTotalXP = 52428800
                        },
                        new
                        {
                            Id = 21,
                            LevelName = 21,
                            LevelTotalXP = 104857600
                        },
                        new
                        {
                            Id = 22,
                            LevelName = 22,
                            LevelTotalXP = 209715200
                        },
                        new
                        {
                            Id = 23,
                            LevelName = 23,
                            LevelTotalXP = 419430400
                        },
                        new
                        {
                            Id = 24,
                            LevelName = 24,
                            LevelTotalXP = 838860800
                        });
                });

            modelBuilder.Entity("BApp.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BApp.Domain.Models.UserColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorHexValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Difficulty")
                        .HasColumnType("integer");

                    b.Property<DateTime>("SavingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserColors");
                });

            modelBuilder.Entity("BApp.Domain.Models.UserLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentXP")
                        .HasColumnType("integer");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserLevels");
                });

            modelBuilder.Entity("BApp.Domain.Models.UserColor", b =>
                {
                    b.HasOne("BApp.Domain.Models.User", "User")
                        .WithMany("UserColors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BApp.Domain.Models.UserLevel", b =>
                {
                    b.HasOne("BApp.Domain.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BApp.Domain.Models.User", "User")
                        .WithOne("UserLevel")
                        .HasForeignKey("BApp.Domain.Models.UserLevel", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Level");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BApp.Domain.Models.User", b =>
                {
                    b.Navigation("UserColors");

                    b.Navigation("UserLevel")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
